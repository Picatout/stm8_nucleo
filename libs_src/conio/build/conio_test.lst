ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 1.
Hexadecimal [24-Bits]



                                      1 
                                      2 
                                      3     .module CONIO_TEST
                                            .include "../../inc/nucleo_8s208.inc"
                                        ;;
                                        ; Copyright Jacques Deschênes 2019 
                                        ; This file is part of MONA 
                                        ;
                                        ;     MONA is free software: you can redistribute it and/or modify
                                        ;     it under the terms of the GNU General Public License as published by
                                        ;     the Free Software Foundation, either version 3 of the License, or
                                        ;     (at your option) any later version.
                                        ;
                                        ;     MONA is distributed in the hope that it will be useful,
                                        ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                        ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                        ;     GNU General Public License for more details.
                                        ;
                                        ;     You should have received a copy of the GNU General Public License
                                        ;     along with MONA.  If not, see <http://www.gnu.org/licenses/>.
                                        ;;
                                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                        ; NUCLEO-8S208RB board specific definitions
                                        ; Date: 2019/10/29
                                        ; author: Jacques Deschênes, copyright 2018,2019
                                        ; licence: GPLv3
                                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                        
                                        ; mcu on board is stm8s208rbt6
                                        
                                        ; crystal on board is 8Mhz
                                 
                                        
                                        ; LED2 is user LED
                                        ; connected to PC5 via Q2 -> 2N7002 MOSFET
                                 
                                 
                                 
                                        
                                        ; B1 on schematic is user button
                                        ; connected to PE4
                                        ; external pullup resistor R6 4k7 and debounce capacitor C5 100nF
                                 
                                 
                                 
                                        
                                        
                                            .include "../../inc/stm8s208.inc"
                                        ;;
                                        ; Copyright Jacques Deschênes 2019 
                                        ; This file is part of MONA 
                                        ;
                                        ;     MONA is free software: you can redistribute it and/or modify
                                        ;     it under the terms of the GNU General Public License as published by
                                        ;     the Free Software Foundation, either version 3 of the License, or
                                        ;     (at your option) any later version.
                                        ;
                                        ;     MONA is distributed in the hope that it will be useful,
                                        ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                        ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                        ;     GNU General Public License for more details.
                                        ;
                                        ;     You should have received a copy of the GNU General Public License
                                        ;     along with MONA.  If not, see <http://www.gnu.org/licenses/>.
                                        ;;
                                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                        ; 2019/10/18
                                        ; STM8S208RB µC registers map
                                        ; sdas source file
                                        ; author: Jacques Deschênes, copyright 2018,2019
                                        ; licence: GPLv3
                                        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                        	.module stm8s208rb
                                        
                                        ;;;;;;;;;;;;
                                        ; bits
                                        ;;;;;;;;;;;;
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                         	
                                        ;;;;;;;;;;;;
                                        ; bits masks
                                        ;;;;;;;;;;;;
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; HSI oscillator frequency 16Mhz
                                 
                                        ; LSI oscillator frequency 128Khz
                                 
                                        
                                        ; controller memory regions
                                 
                                 
                                        ; STM8S208RB have 128K flash
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; options bytes
                                        ; this one can be programmed only from SWIM  (ICP)
                                 
                                        ; these can be programmed at runtime (IAP)
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; option registers usage
                                        ; read out protection, value 0xAA enable ROP
                                 
                                        ; user boot code, {0..0x3e} 512 bytes row
                                 
                                 
                                        ; alternate function register
                                 
                                 
                                        ; miscelinous options
                                 
                                 
                                        ; clock options
                                 
                                 
                                        ; HSE clock startup delay
                                 
                                 
                                        ; flash wait state
                                 
                                 
                                        
                                        ; watchdog options bits
                                 
                                 
                                 
                                 
                                        ; NWDGOPT bits
                                 
                                 
                                 
                                 
                                        
                                        ; CLKOPT bits
                                 
                                 
                                 
                                 
                                        
                                        ; AFR option, remapable functions
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; device ID = (read only)
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        
                                 
                                 
                                        ; PORTS SFR OFFSET
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; GPIO
                                        ; gpio register offset to base
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; port A
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port B
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port C
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port D
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port E
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port F
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port G
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port H not present on LQFP48/LQFP64 package
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; port I ; only bit 0 on LQFP64 package, not present on LQFP48
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; input modes CR1
                                 
                                 
                                        ; output mode CR1
                                 
                                 
                                        ; input modes CR2
                                 
                                 
                                        ; output speed CR2
                                 
                                 
                                        
                                        
                                        ; Flash memory
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; data memory unlock keys
                                 
                                 
                                        ; flash memory unlock keys
                                 
                                 
                                        ; FLASH_CR1 bits
                                 
                                 
                                 
                                 
                                        ; FLASH_CR2 bits
                                 
                                 
                                 
                                 
                                 
                                        ; FLASH_FPR bits
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; FLASH_NFPR bits
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; FLASH_IAPSR bits
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Interrupt control
                                 
                                 
                                        
                                        ; Reset Status
                                 
                                        
                                        ; Clock Registers
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Peripherals clock gating
                                        ; CLK_PCKENR1 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        ; CLK_PCKENR2
                                 
                                 
                                 
                                        
                                        ; Clock bits
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                        ; clock source
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Watchdog
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Beeper
                                        ; beeper output is alternate function AFR7 on PD4
                                        ; connected to CN9-6
                                 
                                 
                                 
                                 
                                        
                                        ; SPI
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; I2C
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                        
                                        ; Precalculated values, all in KHz
                                 
                                 
                                        ;
                                        ; Fast I2C mode max rise time = 300ns
                                        ; I2C_FREQR = 16 = (MHz) => tMASTER = 1/16 = 62.5 ns
                                        ; TRISER = = (300/62.5) + 1 = floor(4.8) + 1 = 5.
                                        
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                        ;
                                        ; Standard I2C mode max rise time = 1000ns
                                        ; I2C_FREQR = 16 = (MHz) => tMASTER = 1/16 = 62.5 ns
                                        ; TRISER = = (1000/62.5) + 1 = floor(16) + 1 = 17.
                                        
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                        
                                        ; baudrate constant for brr_value table access
                                        ; to be used by uart_init 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; UART registers offset from
                                        ; base address 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; uart identifier
                                        ; to be used by uart_init
                                 
                                 
                                        
                                        ; pins used by uart 
                                 
                                 
                                 
                                 
                                        ; uart port base address 
                                 
                                 
                                        
                                        ; UART1 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; UART3
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; UART Status Register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Uart Control Register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        ; LIN mode config register
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; TIMERS
                                        ; Timer 1 - 16-bit timer with complementary PWM outputs
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer Control Register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer Slave Mode Control bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer External Trigger Enable bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer Interrupt Enable bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer Status Register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                        
                                        ; Timer Event Generation Register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Capture/Compare Mode Register 1 - channel configured in output
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Capture/Compare Mode Register 1 - channel configured in input
                                 
                                 
                                 
                                 
                                 
                                 
                                        ;  TIM1_CCMR1_CC1S1 = (1)
                                 
                                        
                                        ; Capture/Compare Mode Register 2 - channel configured in output
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Capture/Compare Mode Register 2 - channel configured in input
                                 
                                 
                                 
                                 
                                 
                                 
                                        ;  TIM1_CCMR2_CC2S1 = (1)
                                 
                                        
                                        ; Capture/Compare Mode Register 3 - channel configured in output
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Capture/Compare Mode Register 3 - channel configured in input
                                 
                                 
                                 
                                 
                                 
                                 
                                        ;  TIM1_CCMR3_CC3S1 = (1)
                                 
                                        
                                        ; Capture/Compare Mode Register 4 - channel configured in output
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Capture/Compare Mode Register 4 - channel configured in input
                                 
                                 
                                 
                                 
                                 
                                 
                                        ;  TIM1_CCMR4_CC4S1 = (1)
                                 
                                        
                                        ; Timer 2 - 16-bit timer
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer 3
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; TIM3_CR1  fields
                                 
                                 
                                 
                                 
                                 
                                        ; TIM3_CCR2  fields
                                 
                                 
                                 
                                        ; TIM3_CCER1 fields
                                 
                                 
                                 
                                 
                                        ; TIM3_CCER2 fields
                                 
                                 
                                        
                                        ; Timer 4
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Timer 4 bitmasks
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                        
                                 
                                        
                                 
                                        
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; ADC2
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                         
                                        ; ADC bitmasks
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                        
                                        ; beCAN
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        
                                        ; CPU
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; global configuration register
                                 
                                 
                                 
                                        
                                        ; interrupt control registers
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; SWIM, control and status register
                                 
                                        ; debug registers
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Interrupt Numbers
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Interrupt Vectors
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                        ; Condition code register bits
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                            .include "../../inc/ascii.inc"
                                        ;;
                                        ; Copyright Jacques Deschênes 2019 
                                        ; This file is part of MONA 
                                        ;
                                        ;     MONA is free software: you can redistribute it and/or modify
                                        ;     it under the terms of the GNU General Public License as published by
                                        ;     the Free Software Foundation, either version 3 of the License, or
                                        ;     (at your option) any later version.
                                        ;
                                        ;     MONA is distributed in the hope that it will be useful,
                                        ;     but WITHOUT ANY WARRANTY; without even the implied warranty of
                                        ;     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                        ;     GNU General Public License for more details.
                                        ;
                                        ;     You should have received a copy of the GNU General Public License
                                        ;     along with MONA.  If not, see <http://www.gnu.org/licenses/>.
                                        ;;
                                        
                                        ;-------------------------------------------------------
                                        ;     ASCII control  values
                                        ;     CTRL_x   are VT100 keyboard values  
                                        ;-------------------------------------------------------
                                 
                                 
                                 
                                 
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                        
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                 
                                      8     .list 
                                      9 
                                     10 ;--------------------------------------------------------
                                     11 ;      MACROS
                                     12 ;--------------------------------------------------------
                                     13 		.macro _ledenable ; set PC5 as push-pull output fast mode
                                     14 		bset PC_CR1,#LED2_BIT
                                     15 		bset PC_CR2,#LED2_BIT
                                     16 		bset PC_DDR,#LED2_BIT
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 2.
Hexadecimal [24-Bits]



                                     17 		.endm
                                     18 		
                                     19 		.macro _ledon ; turn on green LED 
                                     20 		bset PC_ODR,#LED2_BIT
                                     21 		.endm
                                     22 		
                                     23 		.macro _ledoff ; turn off green LED
                                     24 		bres PC_ODR,#LED2_BIT
                                     25 		.endm
                                     26 		
                                     27 		.macro _ledtoggle ; invert green LED state
                                     28 		ld a,#LED2_MASK
                                     29 		xor a,PC_ODR
                                     30 		ld PC_ODR,a
                                     31 		.endm
                                     32 		
                                     33 		
                                     34 		.macro  _int_enable ; enable interrupts
                                     35 		 rim
                                     36 		.endm
                                     37 		
                                     38 		.macro _int_disable ; disable interrupts
                                     39 		sim
                                     40 		.endm
                                     41 
                                     42         .macro _drop n 
                                     43         addw sp,#n 
                                     44         .endm 
                                     45 
                                     46     .area DATA 
                           000050    47     TIB_SIZE=80
                           000050    48     PAD_SIZE=80 
      000000                         49 tib:  .ds TIB_SIZE 
      000050                         50 pad:  .ds PAD_SIZE
      0000A0                         51 acc24: .blkb 1
      0000A1                         52 acc16: .blkb 1
      0000A2                         53 acc8:  .blkb 1
                                     54 
                                     55     .area SSEG (ABS)
                           000100    56     STACK_SIZE=256 
      001700                         57     .org RAM_SIZE-STACK_SIZE
      001700                         58     .ds STACK_SIZE 
                                     59 
                                     60     .area HOME 
      000000 82 00 02 0D             61     INT init0
      000004 82 00 00 01             62     INT TrapHandler
      000008 82 00 00 00             63     INT NonHandledInterrupt
      00000C 82 00 00 00             64     INT NonHandledInterrupt
      000010 82 00 00 00             65     INT NonHandledInterrupt
      000014 82 00 00 00             66     INT NonHandledInterrupt
      000018 82 00 00 00             67     INT NonHandledInterrupt
      00001C 82 00 00 00             68     INT NonHandledInterrupt
      000020 82 00 00 00             69     INT NonHandledInterrupt
      000024 82 00 00 00             70     INT NonHandledInterrupt
      000028 82 00 00 00             71     INT NonHandledInterrupt
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 3.
Hexadecimal [24-Bits]



      00002C 82 00 00 00             72     INT NonHandledInterrupt
      000030 82 00 00 00             73     INT NonHandledInterrupt
      000034 82 00 00 00             74     INT NonHandledInterrupt
      000038 82 00 00 00             75     INT NonHandledInterrupt
      00003C 82 00 00 00             76     INT NonHandledInterrupt
      000040 82 00 00 00             77     INT NonHandledInterrupt
      000044 82 00 00 00             78     INT NonHandledInterrupt
      000048 82 00 00 00             79     INT NonHandledInterrupt
      00004C 82 00 00 00             80     INT NonHandledInterrupt
      000050 82 00 00 00             81     INT NonHandledInterrupt
      000054 82 00 00 00             82     INT NonHandledInterrupt
      000058 82 00 00 00             83     INT NonHandledInterrupt
      00005C 82 00 00 00             84     INT NonHandledInterrupt
      000060 82 00 00 00             85     INT NonHandledInterrupt
      000064 82 00 00 00             86     INT NonHandledInterrupt
      000068 82 00 00 00             87     INT NonHandledInterrupt
      00006C 82 00 00 00             88     INT NonHandledInterrupt
      000070 82 00 00 00             89     INT NonHandledInterrupt
      000074 82 00 00 00             90     INT NonHandledInterrupt
      000078 82 00 00 00             91     INT NonHandledInterrupt
      00007C 82 00 00 00             92     INT NonHandledInterrupt
                                     93 
                                     94 
                                     95     .area CODE
                                     96 
      000000                         97 NonHandledInterrupt:
      000000 71                      98     .byte 0x71  ; réinitialize le MCU
                                     99 
                                    100 
                                    101 ;------------------------------------
                                    102 ; gestionnaire pour l'instrcution trap 
                                    103 ;------------------------------------
      000001                        104 TrapHandler:
      000001 CD 00 05         [ 4]  105 	call print_registers
      000004 80               [11]  106 	iret
                                    107 
                                    108 ; affiche les registres sauvegardés
                                    109 ; par l'interruption sur la pile.
      000005                        110 print_registers:
      000005 90 AE 00 A2      [ 2]  111 	ldw y,#STATES
      000009 CD 01 4B         [ 4]  112 	call trap_puts
                                    113 ; print EPC 
      00000C 90 AE 00 DE      [ 2]  114 	ldw y, #REG_EPC
      000010 CD 01 4B         [ 4]  115 	call trap_puts 
      000013 7B 0B            [ 1]  116 	ld a, (11,sp)
      000015 C7 00 A2         [ 1]  117 	ld acc8,a 
      000018 7B 0A            [ 1]  118 	ld a, (10,sp) 
      00001A C7 00 A1         [ 1]  119 	ld acc16,a 
      00001D 7B 09            [ 1]  120 	ld a,(9,sp) 
      00001F C7 00 A0         [ 1]  121 	ld acc24,a
      000022 5F               [ 1]  122 	clrw x  
      000023 A6 10            [ 1]  123 	ld a,#16
      000025 CD 00 F9         [ 4]  124 	call print_int  
                                    125 ; print Y 
      000028 90 AE 00 E4      [ 2]  126 	ldw y,#REG_Y
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 4.
Hexadecimal [24-Bits]



      00002C CD 01 4B         [ 4]  127 	call trap_puts 
      00002F 72 5F 00 A0      [ 1]  128 	clr acc24 
      000033 7B 08            [ 1]  129 	ld a,(8,sp)
      000035 C7 00 A2         [ 1]  130 	ld acc8,a 
      000038 7B 07            [ 1]  131 	ld a,(7,sp)
      00003A C7 00 A1         [ 1]  132 	ld acc16,a 
      00003D 5F               [ 1]  133     clrw x 
      00003E A6 10            [ 1]  134 	ld a,#16 
      000040 CD 00 F9         [ 4]  135 	call print_int 
                                    136 ; print X
      000043 90 AE 00 E9      [ 2]  137 	ldw y,#REG_X
      000047 CD 01 4B         [ 4]  138 	call trap_puts  
      00004A 7B 06            [ 1]  139 	ld a,(6,sp)
      00004C C7 00 A2         [ 1]  140 	ld acc8,a 
      00004F 7B 05            [ 1]  141 	ld a,(5,sp)
      000051 C7 00 A1         [ 1]  142 	ld acc16,a 
      000054 A6 10            [ 1]  143 	ld a,#16 
      000056 5F               [ 1]  144     clrw x
      000057 CD 00 F9         [ 4]  145 	call print_int 
                                    146 ; print A 
      00005A 90 AE 00 EE      [ 2]  147 	ldw y,#REG_A 
      00005E CD 01 4B         [ 4]  148 	call trap_puts 
      000061 72 5F 00 A1      [ 1]  149 	clr acc16
      000065 7B 04            [ 1]  150 	ld a, (4,sp) 
      000067 C7 00 A2         [ 1]  151 	ld acc8,a 
      00006A A6 10            [ 1]  152 	ld a,#16
      00006C 5F               [ 1]  153     clrw x 
      00006D CD 00 F9         [ 4]  154 	call print_int 
                                    155 ; print CC 
      000070 90 AE 00 F3      [ 2]  156 	ldw y,#REG_CC 
      000074 CD 01 4B         [ 4]  157 	call trap_puts 
      000077 7B 03            [ 1]  158 	ld a, (3,sp) 
      000079 C7 00 A2         [ 1]  159 	ld acc8,a
      00007C A6 10            [ 1]  160 	ld a,#16
      00007E 5F               [ 1]  161     clrw x   
      00007F CD 00 F9         [ 4]  162 	call print_int 
      000082 A6 0A            [ 1]  163 	ld a,#'\n' 
      000084 CD 01 42         [ 4]  164 	call trap_putc  
      000087 81               [ 4]  165 	ret
                                    166 
      000088 50 72 6F 67 72 61 6D   167 USER_ABORT: .asciz "Program aborted by user.\n"
             20 61 62 6F 72 74 65
             64 20 62 79 20 75 73
             65 72 2E 0A 00
      0000A2 52 65 67 69 73 74 65   168 STATES:  .asciz "Registers state at abort point.\n--------------------------\n"
             72 73 20 73 74 61 74
             65 20 61 74 20 61 62
             6F 72 74 20 70 6F 69
             6E 74 2E 0A 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 2D 2D 2D 2D 2D
             2D 2D 0A 00
      0000DE 45 50 43 3A 20 00      169 REG_EPC: .asciz "EPC: "
      0000E4 0A 59 3A 20 00         170 REG_Y:   .asciz "\nY: " 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 5.
Hexadecimal [24-Bits]



      0000E9 0A 58 3A 20 00         171 REG_X:   .asciz "\nX: "
      0000EE 0A 41 3A 20 00         172 REG_A:   .asciz "\nA: " 
      0000F3 0A 43 43 3A 20 00      173 REG_CC:  .asciz "\nCC: "
                                    174 
                                    175 ;------------------------------------
                                    176 ; print integer in acc24 
                                    177 ; input:
                                    178 ;	acc24 		integer to print 
                                    179 ;	A 			numerical base for conversion 
                                    180 ;   XL 			field width, 0 -> no fill.
                                    181 ;  output:
                                    182 ;    none 
                                    183 ;------------------------------------
                           000002   184 	BASE = 2
                           000001   185 	WIDTH = 1
                           000002   186 	LOCAL_SIZE = 2
      0000F9                        187 print_int::
      0000F9 90 89            [ 2]  188 	pushw y 
      0000FB 52 02            [ 2]  189 	sub sp,#LOCAL_SIZE 
      0000FD 6B 02            [ 1]  190 	ld (BASE,sp),a 
      0000FF 9F               [ 1]  191 	ld a,xl
      000100 6B 01            [ 1]  192 	ld (WIDTH,sp),a 
      000102 7B 02            [ 1]  193 	ld a, (BASE,sp)  
      000104 CD 01 55         [ 4]  194     call itoa  ; conversion entier en  .asciz
      000107 C7 00 A2         [ 1]  195 	ld acc8,a ; string length 
      00010A A6 10            [ 1]  196 	ld a,#16
      00010C 11 02            [ 1]  197 	cp a,(BASE,sp)
      00010E 26 0A            [ 1]  198 	jrne 1$
      000110 90 5A            [ 2]  199 	decw y 
      000112 A6 24            [ 1]  200 	ld a,#'$
      000114 90 F7            [ 1]  201 	ld (y),a
      000116 72 5C 00 A2      [ 1]  202 	inc acc8 
      00011A 7B 01            [ 1]  203 1$: ld a,(WIDTH,sp) 
      00011C 27 17            [ 1]  204 	jreq 4$
      00011E C0 00 A2         [ 1]  205 	sub a,acc8
      000121 23 12            [ 2]  206 	jrule 4$
      000123 6B 01            [ 1]  207 	ld (WIDTH,sp),a 
      000125 A6 20            [ 1]  208 	ld  a,#SPACE
      000127 0D 01            [ 1]  209 3$: tnz (WIDTH,sp)
      000129 27 0A            [ 1]  210 	jreq 4$
      00012B 2B 08            [ 1]  211 	jrmi 4$
      00012D 90 5A            [ 2]  212 	decw y 
      00012F 90 F7            [ 1]  213 	ld (y),a 
      000131 0A 01            [ 1]  214 	dec (WIDTH,sp) 
      000133 20 F2            [ 2]  215 	jra 3$
      000135 CD 01 4B         [ 4]  216 4$: call trap_puts 
      000138 A6 20            [ 1]  217     ld a,#SPACE 
      00013A CD 01 42         [ 4]  218 	call trap_putc 
      00013D 5B 02            [ 2]  219     addw sp,#LOCAL_SIZE 
      00013F 90 85            [ 2]  220 	popw y 
      000141 81               [ 4]  221     ret	
                                    222 
      000142                        223 trap_putc:
      000142 4B 01            [ 1]  224     push #UART3
      000144 88               [ 1]  225     push a 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 6.
Hexadecimal [24-Bits]



      000145 CD 00 00         [ 4]  226     call uart_putc 
      000148                        227     _drop 2 
      000148 5B 02            [ 2]    1         addw sp,#2 
      00014A 81               [ 4]  228     ret 
                                    229 
      00014B                        230 trap_puts:
      00014B 4B 01            [ 1]  231     push #UART3 
      00014D 90 89            [ 2]  232     pushw y 
      00014F CD 00 00         [ 4]  233     call uart_puts 
      000152                        234     _drop 3 
      000152 5B 03            [ 2]    1         addw sp,#3 
      000154 81               [ 4]  235     ret 
                                    236 
                                    237 
                                    238 ;------------------------------------
                                    239 ; convert integer to string
                                    240 ; input:
                                    241 ;   A	  	base
                                    242 ;	acc24	integer to convert
                                    243 ; output:
                                    244 ;   y  		pointer to string
                                    245 ;   A 		string length 
                                    246 ;------------------------------------
                           000001   247 	SIGN=1  ; integer sign 
                           000002   248 	BASE=2  ; numeric base 
                           000002   249 	LOCAL_SIZE=2  ;locals size
      000155                        250 itoa::
      000155 52 02            [ 2]  251 	sub sp,#LOCAL_SIZE
      000157 6B 02            [ 1]  252 	ld (BASE,sp), a  ; base
      000159 0F 01            [ 1]  253 	clr (SIGN,sp)    ; sign
      00015B A1 0A            [ 1]  254 	cp a,#10
      00015D 26 0A            [ 1]  255 	jrne 1$
                                    256 	; base 10 string display with negative sign if bit 23==1
      00015F 72 0F 00 A0 05   [ 2]  257 	btjf acc24,#7,1$
      000164 03 01            [ 1]  258 	cpl (SIGN,sp)
      000166 CD 01 DB         [ 4]  259 	call neg_acc24
      000169                        260 1$:
                                    261 ; initialize string pointer 
      000169 90 AE 00 9F      [ 2]  262 	ldw y,#pad+PAD_SIZE-1
      00016D 90 7F            [ 1]  263 	clr (y)
      00016F                        264 itoa_loop:
      00016F 7B 02            [ 1]  265     ld a,(BASE,sp)
      000171 CD 01 B3         [ 4]  266     call divu24_8 ; acc24/A 
      000174 AB 30            [ 1]  267     add a,#'0  ; remainder of division
      000176 A1 3A            [ 1]  268     cp a,#'9+1
      000178 2B 02            [ 1]  269     jrmi 2$
      00017A AB 07            [ 1]  270     add a,#7 
      00017C 90 5A            [ 2]  271 2$: decw y
      00017E 90 F7            [ 1]  272     ld (y),a
                                    273 	; if acc24==0 conversion done
      000180 C6 00 A0         [ 1]  274 	ld a,acc24
      000183 CA 00 A1         [ 1]  275 	or a,acc16
      000186 CA 00 A2         [ 1]  276 	or a,acc8
      000189 26 E4            [ 1]  277     jrne itoa_loop
                                    278 	;conversion done, next add '$' or '-' as required
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 7.
Hexadecimal [24-Bits]



      00018B 7B 02            [ 1]  279 	ld a,(BASE,sp)
      00018D A1 10            [ 1]  280 	cp a,#16
      00018F 27 0A            [ 1]  281 	jreq 10$
      000191 7B 01            [ 1]  282     ld a,(SIGN,sp)
      000193 27 06            [ 1]  283     jreq 10$
      000195 90 5A            [ 2]  284     decw y
      000197 A6 2D            [ 1]  285     ld a,#'-
      000199 90 F7            [ 1]  286     ld (y),a
      00019B                        287 10$:
      00019B 5B 02            [ 2]  288 	addw sp,#LOCAL_SIZE
      00019D CD 01 A1         [ 4]  289 	call strlen
      0001A0 81               [ 4]  290 	ret
                                    291 
                                    292 ;------------------------------------
                                    293 ;strlen  return .asciz string length
                                    294 ; input:
                                    295 ;	y  	pointer to string
                                    296 ; output:
                                    297 ;	a   length  < 256
                                    298 ;------------------------------------
                           000001   299 	LEN=1
      0001A1                        300 strlen::
      0001A1 90 89            [ 2]  301     pushw y
      0001A3 4B 00            [ 1]  302     push #0 ; length 
      0001A5 90 F6            [ 1]  303 0$: ld a,(y)
      0001A7 27 06            [ 1]  304     jreq 1$
      0001A9 0C 01            [ 1]  305     inc (LEN,sp)
      0001AB 90 5C            [ 1]  306     incw y
      0001AD 20 F6            [ 2]  307     jra 0$
      0001AF 84               [ 1]  308 1$: pop a
      0001B0 90 85            [ 2]  309     popw y
      0001B2 81               [ 4]  310     ret
                                    311 
                                    312 ;-------------------------------------
                                    313 ; divide uint24_t by uint8_t
                                    314 ; used to convert uint24_t to string
                                    315 ; input:
                                    316 ;	acc24	dividend
                                    317 ;   A 		divisor
                                    318 ; output:
                                    319 ;   acc24	quotient
                                    320 ;   A		remainder
                                    321 ;------------------------------------- 
                                    322 ; offset  on sp of arguments and locals
                           000001   323 	U8   = 1   ; divisor on stack
                           000001   324 	LOCAL_SIZE =1
      0001B3                        325 divu24_8::
      0001B3 89               [ 2]  326 	pushw x ; save x
      0001B4 88               [ 1]  327 	push a 
                                    328 	; ld dividend UU:MM bytes in X
      0001B5 C6 00 A0         [ 1]  329 	ld a, acc24
      0001B8 95               [ 1]  330 	ld xh,a
      0001B9 C6 00 A1         [ 1]  331 	ld a,acc24+1
      0001BC 97               [ 1]  332 	ld xl,a
      0001BD 7B 01            [ 1]  333 	ld a,(U8,SP) ; divisor
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 8.
Hexadecimal [24-Bits]



      0001BF 62               [ 2]  334 	div x,a ; UU:MM/U8
      0001C0 88               [ 1]  335 	push a  ;save remainder
      0001C1 9E               [ 1]  336 	ld a,xh
      0001C2 C7 00 A0         [ 1]  337 	ld acc24,a
      0001C5 9F               [ 1]  338 	ld a,xl
      0001C6 C7 00 A1         [ 1]  339 	ld acc24+1,a
      0001C9 84               [ 1]  340 	pop a
      0001CA 95               [ 1]  341 	ld xh,a
      0001CB C6 00 A2         [ 1]  342 	ld a,acc24+2
      0001CE 97               [ 1]  343 	ld xl,a
      0001CF 7B 01            [ 1]  344 	ld a,(U8,sp) ; divisor
      0001D1 62               [ 2]  345 	div x,a  ; R:LL/U8
      0001D2 6B 01            [ 1]  346 	ld (U8,sp),a ; save remainder
      0001D4 9F               [ 1]  347 	ld a,xl
      0001D5 C7 00 A2         [ 1]  348 	ld acc24+2,a
      0001D8 84               [ 1]  349 	pop a
      0001D9 85               [ 2]  350 	popw x
      0001DA 81               [ 4]  351 	ret
                                    352 
                                    353 ;------------------------------------
                                    354 ;  two's complement acc24
                                    355 ;  input:
                                    356 ;		acc24 variable
                                    357 ;  output:
                                    358 ;		acc24 variable
                                    359 ;-------------------------------------
      0001DB                        360 neg_acc24::
      0001DB 72 53 00 A2      [ 1]  361 	cpl acc24+2
      0001DF 72 53 00 A1      [ 1]  362 	cpl acc24+1
      0001E3 72 53 00 A0      [ 1]  363 	cpl acc24
      0001E7 A6 01            [ 1]  364 	ld a,#1
      0001E9 CB 00 A2         [ 1]  365 	add a,acc24+2
      0001EC C7 00 A2         [ 1]  366 	ld acc24+2,a
      0001EF 4F               [ 1]  367 	clr a
      0001F0 C9 00 A1         [ 1]  368 	adc a,acc24+1
      0001F3 C7 00 A1         [ 1]  369 	ld acc24+1,a 
      0001F6 4F               [ 1]  370 	clr a 
      0001F7 C9 00 A0         [ 1]  371 	adc a,acc24 
      0001FA C7 00 A0         [ 1]  372 	ld acc24,a 
      0001FD 81               [ 4]  373 	ret
                                    374 
                                    375 
                                    376 
                                    377 	;initialize clock to use HSE 8 Mhz crystal
      0001FE                        378 clock_init:	
      0001FE 72 12 50 C5      [ 1]  379 	bset CLK_SWCR,#CLK_SWCR_SWEN
      000202 A6 B4            [ 1]  380 	ld a,#CLK_SWR_HSE
      000204 C7 50 C4         [ 1]  381 	ld CLK_SWR,a
      000207 C1 50 C3         [ 1]  382 1$:	cp a,CLK_CMSR
      00020A 26 FB            [ 1]  383 	jrne 1$
      00020C 81               [ 4]  384 	ret
                                    385 
      00020D                        386 init0:
      00020D AE 17 FF         [ 2]  387     ldw x,#RAM_SIZE-1
      000210 94               [ 1]  388     ldw sp,x 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 9.
Hexadecimal [24-Bits]



      000211 CD 01 FE         [ 4]  389     call clock_init 
      000214 4B 01            [ 1]  390     push #UART3
      000216 4B 06            [ 1]  391     push #B115200
      000218 CD 00 00         [ 4]  392     call conio_init
      00021B AE 02 31         [ 2]  393     ldw x,#conio_test 
      00021E 89               [ 2]  394     pushw x 
      00021F 83               [ 9]  395     trap 
      000220 CD 00 00         [ 4]  396     call puts
      000223 83               [ 9]  397     trap 
      000224                        398     _drop 2 
      000224 5B 02            [ 2]    1         addw sp,#2 
      000226                        399 0$: 
      000226 CD 00 00         [ 4]  400     call getchar 
      000229 89               [ 2]  401     pushw x
      00022A CD 00 00         [ 4]  402     call putchar
      00022D                        403     _drop 2
      00022D 5B 02            [ 2]    1         addw sp,#2 
      00022F 20 F5            [ 2]  404     jra 0$
                                    405 
      000231 0A 63 6F 6E 69 6F 20   406 conio_test: .asciz "\nconio test\n" 
             74 65 73 74 0A 00
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 10.
Hexadecimal [24-Bits]

Symbol Table

    .__.$$$.=  002710 L   |     .__.ABS.=  000000 G   |     .__.CPU.=  000000 L
    .__.H$L.=  000001 L   |     ADC_CR1 =  005401     |     ADC_CR1_=  000000 
    ADC_CR1_=  000001     |     ADC_CR1_=  000004     |     ADC_CR1_=  000005 
    ADC_CR1_=  000006     |     ADC_CR2 =  005402     |     ADC_CR2_=  000003 
    ADC_CR2_=  000004     |     ADC_CR2_=  000005     |     ADC_CR2_=  000006 
    ADC_CR2_=  000001     |     ADC_CR3 =  005403     |     ADC_CR3_=  000007 
    ADC_CR3_=  000006     |     ADC_CSR =  005400     |     ADC_CSR_=  000006 
    ADC_CSR_=  000004     |     ADC_CSR_=  000000     |     ADC_CSR_=  000001 
    ADC_CSR_=  000002     |     ADC_CSR_=  000003     |     ADC_CSR_=  000007 
    ADC_CSR_=  000005     |     ADC_DRH =  005404     |     ADC_DRL =  005405 
    ADC_TDRH=  005406     |     ADC_TDRL=  005407     |     AFR     =  004803 
    AFR0_ADC=  000000     |     AFR1_TIM=  000001     |     AFR2_CCO=  000002 
    AFR3_TIM=  000003     |     AFR4_TIM=  000004     |     AFR5_TIM=  000005 
    AFR6_I2C=  000006     |     AFR7_BEE=  000007     |     AWU_APR =  0050F1 
    AWU_CSR1=  0050F0     |     AWU_TBR =  0050F2     |     B0_MASK =  000001 
    B115200 =  000006     |     B19200  =  000003     |     B1_MASK =  000002 
    B230400 =  000007     |     B2400   =  000000     |     B2_MASK =  000004 
    B38400  =  000004     |     B3_MASK =  000008     |     B460800 =  000008 
    B4800   =  000001     |     B4_MASK =  000010     |     B57600  =  000005 
    B5_MASK =  000020     |     B6_MASK =  000040     |     B7_MASK =  000080 
    B921600 =  000009     |     B9600   =  000002     |     BASE    =  000002 
    BEEP_BIT=  000004     |     BEEP_CSR=  0050F3     |     BEEP_MAS=  000010 
    BEEP_POR=  00000F     |     BELL    =  000007     |     BIT0    =  000000 
    BIT1    =  000001     |     BIT2    =  000002     |     BIT3    =  000003 
    BIT4    =  000004     |     BIT5    =  000005     |     BIT6    =  000006 
    BIT7    =  000007     |     BOOT_ROM=  006000     |     BOOT_ROM=  007FFF 
    BSP     =  000008     |     CAN_DGR =  005426     |     CAN_FPSR=  005427 
    CAN_IER =  005425     |     CAN_MCR =  005420     |     CAN_MSR =  005421 
    CAN_P0  =  005428     |     CAN_P1  =  005429     |     CAN_P2  =  00542A 
    CAN_P3  =  00542B     |     CAN_P4  =  00542C     |     CAN_P5  =  00542D 
    CAN_P6  =  00542E     |     CAN_P7  =  00542F     |     CAN_P8  =  005430 
    CAN_P9  =  005431     |     CAN_PA  =  005432     |     CAN_PB  =  005433 
    CAN_PC  =  005434     |     CAN_PD  =  005435     |     CAN_PE  =  005436 
    CAN_PF  =  005437     |     CAN_RFR =  005424     |     CAN_TPR =  005423 
    CAN_TSR =  005422     |     CC_C    =  000000     |     CC_H    =  000004 
    CC_I0   =  000003     |     CC_I1   =  000005     |     CC_N    =  000002 
    CC_V    =  000007     |     CC_Z    =  000001     |     CFG_GCR =  007F60 
    CFG_GCR_=  000001     |     CFG_GCR_=  000000     |     CLKOPT  =  004807 
    CLKOPT_C=  000002     |     CLKOPT_E=  000003     |     CLKOPT_P=  000000 
    CLKOPT_P=  000001     |     CLK_CCOR=  0050C9     |     CLK_CKDI=  0050C6 
    CLK_CKDI=  000000     |     CLK_CKDI=  000001     |     CLK_CKDI=  000002 
    CLK_CKDI=  000003     |     CLK_CKDI=  000004     |     CLK_CMSR=  0050C3 
    CLK_CSSR=  0050C8     |     CLK_ECKR=  0050C1     |     CLK_ECKR=  000000 
    CLK_ECKR=  000001     |     CLK_HSIT=  0050CC     |     CLK_ICKR=  0050C0 
    CLK_ICKR=  000002     |     CLK_ICKR=  000000     |     CLK_ICKR=  000001 
    CLK_ICKR=  000003     |     CLK_ICKR=  000004     |     CLK_ICKR=  000005 
    CLK_PCKE=  0050C7     |     CLK_PCKE=  000000     |     CLK_PCKE=  000001 
    CLK_PCKE=  000007     |     CLK_PCKE=  000005     |     CLK_PCKE=  000006 
    CLK_PCKE=  000004     |     CLK_PCKE=  000002     |     CLK_PCKE=  000003 
    CLK_PCKE=  0050CA     |     CLK_PCKE=  000003     |     CLK_PCKE=  000002 
    CLK_PCKE=  000007     |     CLK_SWCR=  0050C5     |     CLK_SWCR=  000000 
    CLK_SWCR=  000001     |     CLK_SWCR=  000002     |     CLK_SWCR=  000003 
    CLK_SWIM=  0050CD     |     CLK_SWR =  0050C4     |     CLK_SWR_=  0000B4 
    CLK_SWR_=  0000E1     |     CLK_SWR_=  0000D2     |     CPU_A   =  007F00 
    CPU_CCR =  007F0A     |     CPU_PCE =  007F01     |     CPU_PCH =  007F02 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 11.
Hexadecimal [24-Bits]

Symbol Table

    CPU_PCL =  007F03     |     CPU_SPH =  007F08     |     CPU_SPL =  007F09 
    CPU_XH  =  007F04     |     CPU_XL  =  007F05     |     CPU_YH  =  007F06 
    CPU_YL  =  007F07     |     CR      =  00000D     |     CTRL_A  =  000001 
    CTRL_B  =  000002     |     CTRL_C  =  000003     |     CTRL_D  =  000004 
    CTRL_E  =  000005     |     CTRL_F  =  000006     |     CTRL_G  =  000007 
    CTRL_H  =  000008     |     CTRL_I  =  000009     |     CTRL_J  =  00000A 
    CTRL_K  =  00000B     |     CTRL_L  =  00000C     |     CTRL_M  =  00000D 
    CTRL_N  =  00000E     |     CTRL_O  =  00000F     |     CTRL_P  =  000010 
    CTRL_Q  =  000011     |     CTRL_R  =  000012     |     CTRL_S  =  000013 
    CTRL_T  =  000014     |     CTRL_U  =  000015     |     CTRL_V  =  000016 
    CTRL_W  =  000017     |     CTRL_X  =  000018     |     CTRL_Y  =  000019 
    CTRL_Z  =  00001A     |     DEBUG_BA=  007F00     |     DEBUG_EN=  007FFF 
    DEVID_BA=  0048CD     |     DEVID_EN=  0048D8     |     DEVID_LO=  0048D2 
    DEVID_LO=  0048D3     |     DEVID_LO=  0048D4     |     DEVID_LO=  0048D5 
    DEVID_LO=  0048D6     |     DEVID_LO=  0048D7     |     DEVID_LO=  0048D8 
    DEVID_WA=  0048D1     |     DEVID_XH=  0048CE     |     DEVID_XL=  0048CD 
    DEVID_YH=  0048D0     |     DEVID_YL=  0048CF     |     DM_BK1RE=  007F90 
    DM_BK1RH=  007F91     |     DM_BK1RL=  007F92     |     DM_BK2RE=  007F93 
    DM_BK2RH=  007F94     |     DM_BK2RL=  007F95     |     DM_CR1  =  007F96 
    DM_CR2  =  007F97     |     DM_CSR1 =  007F98     |     DM_CSR2 =  007F99 
    DM_ENFCT=  007F9A     |     EEPROM_B=  004000     |     EEPROM_E=  0047FF 
    EEPROM_S=  000800     |     ESC     =  00001B     |     EXTI_CR1=  0050A0 
    EXTI_CR2=  0050A1     |     FF      =  00000C     |     FHSE    =  7A1200 
    FHSI    =  F42400     |     FLASH_BA=  008000     |     FLASH_CR=  00505A 
    FLASH_CR=  000002     |     FLASH_CR=  000000     |     FLASH_CR=  000003 
    FLASH_CR=  000001     |     FLASH_CR=  00505B     |     FLASH_CR=  000005 
    FLASH_CR=  000004     |     FLASH_CR=  000007     |     FLASH_CR=  000000 
    FLASH_CR=  000006     |     FLASH_DU=  005064     |     FLASH_DU=  0000AE 
    FLASH_DU=  000056     |     FLASH_EN=  027FFF     |     FLASH_FP=  00505D 
    FLASH_FP=  000000     |     FLASH_FP=  000001     |     FLASH_FP=  000002 
    FLASH_FP=  000003     |     FLASH_FP=  000004     |     FLASH_FP=  000005 
    FLASH_IA=  00505F     |     FLASH_IA=  000003     |     FLASH_IA=  000002 
    FLASH_IA=  000006     |     FLASH_IA=  000001     |     FLASH_IA=  000000 
    FLASH_NC=  00505C     |     FLASH_NF=  00505E     |     FLASH_NF=  000000 
    FLASH_NF=  000001     |     FLASH_NF=  000002     |     FLASH_NF=  000003 
    FLASH_NF=  000004     |     FLASH_NF=  000005     |     FLASH_PU=  005062 
    FLASH_PU=  000056     |     FLASH_PU=  0000AE     |     FLASH_SI=  020000 
    FLASH_WS=  00480D     |     FLSI    =  01F400     |     GPIO_BAS=  005000 
    GPIO_CR1=  000003     |     GPIO_CR2=  000004     |     GPIO_DDR=  000002 
    GPIO_IDR=  000001     |     GPIO_ODR=  000000     |     GPIO_SIZ=  000005 
    HSECNT  =  004809     |     I2C_CCRH=  00521C     |     I2C_CCRH=  000080 
    I2C_CCRH=  0000C0     |     I2C_CCRH=  000080     |     I2C_CCRH=  000000 
    I2C_CCRH=  000001     |     I2C_CCRH=  000000     |     I2C_CCRL=  00521B 
    I2C_CCRL=  00001A     |     I2C_CCRL=  000002     |     I2C_CCRL=  00000D 
    I2C_CCRL=  000050     |     I2C_CCRL=  000090     |     I2C_CCRL=  0000A0 
    I2C_CR1 =  005210     |     I2C_CR1_=  000006     |     I2C_CR1_=  000007 
    I2C_CR1_=  000000     |     I2C_CR2 =  005211     |     I2C_CR2_=  000002 
    I2C_CR2_=  000003     |     I2C_CR2_=  000000     |     I2C_CR2_=  000001 
    I2C_CR2_=  000007     |     I2C_DR  =  005216     |     I2C_FREQ=  005212 
    I2C_ITR =  00521A     |     I2C_ITR_=  000002     |     I2C_ITR_=  000000 
    I2C_ITR_=  000001     |     I2C_OARH=  005214     |     I2C_OARH=  000001 
    I2C_OARH=  000002     |     I2C_OARH=  000006     |     I2C_OARH=  000007 
    I2C_OARL=  005213     |     I2C_OARL=  000000     |     I2C_OAR_=  000813 
    I2C_OAR_=  000009     |     I2C_PECR=  00521E     |     I2C_READ=  000001 
    I2C_SR1 =  005217     |     I2C_SR1_=  000003     |     I2C_SR1_=  000001 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 12.
Hexadecimal [24-Bits]

Symbol Table

    I2C_SR1_=  000002     |     I2C_SR1_=  000006     |     I2C_SR1_=  000000 
    I2C_SR1_=  000004     |     I2C_SR1_=  000007     |     I2C_SR2 =  005218 
    I2C_SR2_=  000002     |     I2C_SR2_=  000001     |     I2C_SR2_=  000000 
    I2C_SR2_=  000003     |     I2C_SR2_=  000005     |     I2C_SR3 =  005219 
    I2C_SR3_=  000001     |     I2C_SR3_=  000007     |     I2C_SR3_=  000004 
    I2C_SR3_=  000000     |     I2C_SR3_=  000002     |     I2C_TRIS=  00521D 
    I2C_TRIS=  000005     |     I2C_TRIS=  000005     |     I2C_TRIS=  000005 
    I2C_TRIS=  000011     |     I2C_TRIS=  000011     |     I2C_TRIS=  000011 
    I2C_WRIT=  000000     |     INPUT_DI=  000000     |     INPUT_EI=  000001 
    INPUT_FL=  000000     |     INPUT_PU=  000001     |     INT_ADC2=  000016 
    INT_AUAR=  000012     |     INT_AWU =  000001     |     INT_CAN_=  000008 
    INT_CAN_=  000009     |     INT_CLK =  000002     |     INT_EXTI=  000003 
    INT_EXTI=  000004     |     INT_EXTI=  000005     |     INT_EXTI=  000006 
    INT_EXTI=  000007     |     INT_FLAS=  000018     |     INT_I2C =  000013 
    INT_SPI =  00000A     |     INT_TIM1=  00000C     |     INT_TIM1=  00000B 
    INT_TIM2=  00000E     |     INT_TIM2=  00000D     |     INT_TIM3=  000010 
    INT_TIM3=  00000F     |     INT_TIM4=  000017     |     INT_TLI =  000000 
    INT_UART=  000011     |     INT_UART=  000015     |     INT_UART=  000014 
    INT_VECT=  008060     |     INT_VECT=  00800C     |     INT_VECT=  008028 
    INT_VECT=  00802C     |     INT_VECT=  008010     |     INT_VECT=  008014 
    INT_VECT=  008018     |     INT_VECT=  00801C     |     INT_VECT=  008020 
    INT_VECT=  008024     |     INT_VECT=  008068     |     INT_VECT=  008054 
    INT_VECT=  008000     |     INT_VECT=  008030     |     INT_VECT=  008038 
    INT_VECT=  008034     |     INT_VECT=  008040     |     INT_VECT=  00803C 
    INT_VECT=  008048     |     INT_VECT=  008044     |     INT_VECT=  008064 
    INT_VECT=  008008     |     INT_VECT=  008004     |     INT_VECT=  008050 
    INT_VECT=  00804C     |     INT_VECT=  00805C     |     INT_VECT=  008058 
    ITC_SPR1=  007F70     |     ITC_SPR2=  007F71     |     ITC_SPR3=  007F72 
    ITC_SPR4=  007F73     |     ITC_SPR5=  007F74     |     ITC_SPR6=  007F75 
    ITC_SPR7=  007F76     |     ITC_SPR8=  007F77     |     IWDG_KR =  0050E0 
    IWDG_PR =  0050E1     |     IWDG_RLR=  0050E2     |     LED2_BIT=  000005 
    LED2_MAS=  000020     |     LED2_POR=  00500A     |     LEN     =  000001 
    LOCAL_SI=  000001     |     NAFR    =  004804     |     NCLKOPT =  004808 
    NFLASH_W=  00480E     |     NHSECNT =  00480A     |     NL      =  00000A 
    NOPT1   =  004802     |     NOPT2   =  004804     |     NOPT3   =  004806 
    NOPT4   =  004808     |     NOPT5   =  00480A     |     NOPT6   =  00480C 
    NOPT7   =  00480E     |     NOPTBL  =  00487F     |     NUBC    =  004802 
    NWDGOPT =  004806     |     NWDGOPT_=  FFFFFFFD     |     NWDGOPT_=  FFFFFFFC 
    NWDGOPT_=  FFFFFFFF     |     NWDGOPT_=  FFFFFFFE     |   5 NonHandl   000000 R
    OPT0    =  004800     |     OPT1    =  004801     |     OPT2    =  004803 
    OPT3    =  004805     |     OPT4    =  004807     |     OPT5    =  004809 
    OPT6    =  00480B     |     OPT7    =  00480D     |     OPTBL   =  00487E 
    OPTION_B=  004800     |     OPTION_E=  00487F     |     OUTPUT_F=  000001 
    OUTPUT_O=  000000     |     OUTPUT_P=  000001     |     OUTPUT_S=  000000 
    PA      =  000000     |     PAD_SIZE=  000050     |     PA_BASE =  005000 
    PA_CR1  =  005003     |     PA_CR2  =  005004     |     PA_DDR  =  005002 
    PA_IDR  =  005001     |     PA_ODR  =  005000     |     PB      =  000005 
    PB_BASE =  005005     |     PB_CR1  =  005008     |     PB_CR2  =  005009 
    PB_DDR  =  005007     |     PB_IDR  =  005006     |     PB_ODR  =  005005 
    PC      =  00000A     |     PC_BASE =  00500A     |     PC_CR1  =  00500D 
    PC_CR2  =  00500E     |     PC_DDR  =  00500C     |     PC_IDR  =  00500B 
    PC_ODR  =  00500A     |     PD      =  00000F     |     PD_BASE =  00500F 
    PD_CR1  =  005012     |     PD_CR2  =  005013     |     PD_DDR  =  005011 
    PD_IDR  =  005010     |     PD_ODR  =  00500F     |     PE      =  000014 
    PE_BASE =  005014     |     PE_CR1  =  005017     |     PE_CR2  =  005018 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 13.
Hexadecimal [24-Bits]

Symbol Table

    PE_DDR  =  005016     |     PE_IDR  =  005015     |     PE_ODR  =  005014 
    PF      =  000019     |     PF_BASE =  005019     |     PF_CR1  =  00501C 
    PF_CR2  =  00501D     |     PF_DDR  =  00501B     |     PF_IDR  =  00501A 
    PF_ODR  =  005019     |     PG      =  00001E     |     PG_BASE =  00501E 
    PG_CR1  =  005021     |     PG_CR2  =  005022     |     PG_DDR  =  005020 
    PG_IDR  =  00501F     |     PG_ODR  =  00501E     |     PH_BASE =  005023 
    PH_CR1  =  005026     |     PH_CR2  =  005027     |     PH_DDR  =  005025 
    PH_IDR  =  005024     |     PH_ODR  =  005023     |     PI_BASE =  005028 
    PI_CR1  =  00502B     |     PI_CR2  =  00502C     |     PI_DDR  =  00502A 
    PI_IDR  =  005029     |     PI_ODR  =  005028     |     RAM_BASE=  000000 
    RAM_END =  0017FF     |     RAM_SIZE=  001800     |   5 REG_A      0000EE R
  5 REG_CC     0000F3 R   |   5 REG_EPC    0000DE R   |   5 REG_X      0000E9 R
  5 REG_Y      0000E4 R   |     ROP     =  004800     |     RST_SR  =  0050B3 
    SFR_BASE=  005000     |     SFR_END =  0057FF     |     SIGN    =  000001 
    SPACE   =  000020     |     SPI_CR1 =  005200     |     SPI_CR2 =  005201 
    SPI_CRCP=  005205     |     SPI_DR  =  005204     |     SPI_ICR =  005202 
    SPI_RXCR=  005206     |     SPI_SR  =  005203     |     SPI_TXCR=  005207 
    STACK_SI=  000100     |   5 STATES     0000A2 R   |     SWIM_CSR=  007F80 
    TAB     =  000009     |     TIB_SIZE=  000050     |     TIM1_ARR=  005262 
    TIM1_ARR=  005263     |     TIM1_BKR=  00526D     |     TIM1_CCE=  00525C 
    TIM1_CCE=  00525D     |     TIM1_CCM=  005258     |     TIM1_CCM=  000000 
    TIM1_CCM=  000001     |     TIM1_CCM=  000004     |     TIM1_CCM=  000005 
    TIM1_CCM=  000006     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000003     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000004     |     TIM1_CCM=  000005     |     TIM1_CCM=  000006 
    TIM1_CCM=  000003     |     TIM1_CCM=  005259     |     TIM1_CCM=  000000 
    TIM1_CCM=  000001     |     TIM1_CCM=  000004     |     TIM1_CCM=  000005 
    TIM1_CCM=  000006     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000003     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000004     |     TIM1_CCM=  000005     |     TIM1_CCM=  000006 
    TIM1_CCM=  000003     |     TIM1_CCM=  00525A     |     TIM1_CCM=  000000 
    TIM1_CCM=  000001     |     TIM1_CCM=  000004     |     TIM1_CCM=  000005 
    TIM1_CCM=  000006     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000003     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000004     |     TIM1_CCM=  000005     |     TIM1_CCM=  000006 
    TIM1_CCM=  000003     |     TIM1_CCM=  00525B     |     TIM1_CCM=  000000 
    TIM1_CCM=  000001     |     TIM1_CCM=  000004     |     TIM1_CCM=  000005 
    TIM1_CCM=  000006     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000003     |     TIM1_CCM=  000007     |     TIM1_CCM=  000002 
    TIM1_CCM=  000004     |     TIM1_CCM=  000005     |     TIM1_CCM=  000006 
    TIM1_CCM=  000003     |     TIM1_CCR=  005265     |     TIM1_CCR=  005266 
    TIM1_CCR=  005267     |     TIM1_CCR=  005268     |     TIM1_CCR=  005269 
    TIM1_CCR=  00526A     |     TIM1_CCR=  00526B     |     TIM1_CCR=  00526C 
    TIM1_CNT=  00525E     |     TIM1_CNT=  00525F     |     TIM1_CR1=  005250 
    TIM1_CR2=  005251     |     TIM1_CR2=  000000     |     TIM1_CR2=  000002 
    TIM1_CR2=  000004     |     TIM1_CR2=  000005     |     TIM1_CR2=  000006 
    TIM1_DTR=  00526E     |     TIM1_EGR=  005257     |     TIM1_EGR=  000007 
    TIM1_EGR=  000001     |     TIM1_EGR=  000002     |     TIM1_EGR=  000003 
    TIM1_EGR=  000004     |     TIM1_EGR=  000005     |     TIM1_EGR=  000006 
    TIM1_EGR=  000000     |     TIM1_ETR=  005253     |     TIM1_ETR=  000006 
    TIM1_ETR=  000000     |     TIM1_ETR=  000001     |     TIM1_ETR=  000002 
    TIM1_ETR=  000003     |     TIM1_ETR=  000007     |     TIM1_ETR=  000004 
    TIM1_ETR=  000005     |     TIM1_IER=  005254     |     TIM1_IER=  000007 
    TIM1_IER=  000001     |     TIM1_IER=  000002     |     TIM1_IER=  000003 
    TIM1_IER=  000004     |     TIM1_IER=  000005     |     TIM1_IER=  000006 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 14.
Hexadecimal [24-Bits]

Symbol Table

    TIM1_IER=  000000     |     TIM1_OIS=  00526F     |     TIM1_PSC=  005260 
    TIM1_PSC=  005261     |     TIM1_RCR=  005264     |     TIM1_SMC=  005252 
    TIM1_SMC=  000007     |     TIM1_SMC=  000000     |     TIM1_SMC=  000001 
    TIM1_SMC=  000002     |     TIM1_SMC=  000004     |     TIM1_SMC=  000005 
    TIM1_SMC=  000006     |     TIM1_SR1=  005255     |     TIM1_SR1=  000007 
    TIM1_SR1=  000001     |     TIM1_SR1=  000002     |     TIM1_SR1=  000003 
    TIM1_SR1=  000004     |     TIM1_SR1=  000005     |     TIM1_SR1=  000006 
    TIM1_SR1=  000000     |     TIM1_SR2=  005256     |     TIM1_SR2=  000001 
    TIM1_SR2=  000002     |     TIM1_SR2=  000003     |     TIM1_SR2=  000004 
    TIM2_ARR=  00530D     |     TIM2_ARR=  00530E     |     TIM2_CCE=  005308 
    TIM2_CCE=  005309     |     TIM2_CCM=  005305     |     TIM2_CCM=  005306 
    TIM2_CCM=  005307     |     TIM2_CCR=  00530F     |     TIM2_CCR=  005310 
    TIM2_CCR=  005311     |     TIM2_CCR=  005312     |     TIM2_CCR=  005313 
    TIM2_CCR=  005314     |     TIM2_CNT=  00530A     |     TIM2_CNT=  00530B 
    TIM2_CR1=  005300     |     TIM2_EGR=  005304     |     TIM2_IER=  005301 
    TIM2_PSC=  00530C     |     TIM2_SR1=  005302     |     TIM2_SR2=  005303 
    TIM3_ARR=  00532B     |     TIM3_ARR=  00532C     |     TIM3_CCE=  005327 
    TIM3_CCE=  000000     |     TIM3_CCE=  000001     |     TIM3_CCE=  000004 
    TIM3_CCE=  000005     |     TIM3_CCE=  000000     |     TIM3_CCE=  000001 
    TIM3_CCM=  005325     |     TIM3_CCM=  005326     |     TIM3_CCM=  000000 
    TIM3_CCM=  000004     |     TIM3_CCM=  000003     |     TIM3_CCR=  00532D 
    TIM3_CCR=  00532E     |     TIM3_CCR=  00532F     |     TIM3_CCR=  005330 
    TIM3_CNT=  005328     |     TIM3_CNT=  005329     |     TIM3_CR1=  005320 
    TIM3_CR1=  000007     |     TIM3_CR1=  000000     |     TIM3_CR1=  000003 
    TIM3_CR1=  000001     |     TIM3_CR1=  000002     |     TIM3_EGR=  005324 
    TIM3_IER=  005321     |     TIM3_PSC=  00532A     |     TIM3_SR1=  005322 
    TIM3_SR2=  005323     |     TIM4_ARR=  005346     |     TIM4_CNT=  005344 
    TIM4_CR1=  005340     |     TIM4_CR1=  000007     |     TIM4_CR1=  000000 
    TIM4_CR1=  000003     |     TIM4_CR1=  000001     |     TIM4_CR1=  000002 
    TIM4_EGR=  005343     |     TIM4_EGR=  000000     |     TIM4_IER=  005341 
    TIM4_IER=  000000     |     TIM4_PSC=  005345     |     TIM4_PSC=  000000 
    TIM4_PSC=  000007     |     TIM4_PSC=  000004     |     TIM4_PSC=  000001 
    TIM4_PSC=  000005     |     TIM4_PSC=  000002     |     TIM4_PSC=  000006 
    TIM4_PSC=  000003     |     TIM4_PSC=  000000     |     TIM4_PSC=  000001 
    TIM4_PSC=  000002     |     TIM4_SR =  005342     |     TIM4_SR_=  000000 
    TIM_CR1_=  000007     |     TIM_CR1_=  000000     |     TIM_CR1_=  000006 
    TIM_CR1_=  000005     |     TIM_CR1_=  000004     |     TIM_CR1_=  000003 
    TIM_CR1_=  000001     |     TIM_CR1_=  000002     |   5 TrapHand   000001 R
    U8      =  000001     |     UART1   =  000000     |     UART1_BA=  005230 
    UART1_BR=  005232     |     UART1_BR=  005233     |     UART1_CR=  005234 
    UART1_CR=  005235     |     UART1_CR=  005236     |     UART1_CR=  005237 
    UART1_CR=  005238     |     UART1_DR=  005231     |     UART1_GT=  005239 
    UART1_PO=  000000     |     UART1_PS=  00523A     |     UART1_RX=  000004 
    UART1_SR=  005230     |     UART1_TX=  000005     |     UART3   =  000001 
    UART3_BA=  005240     |     UART3_BR=  005242     |     UART3_BR=  005243 
    UART3_CR=  005244     |     UART3_CR=  005245     |     UART3_CR=  005246 
    UART3_CR=  005247     |     UART3_CR=  004249     |     UART3_DR=  005241 
    UART3_PO=  00000F     |     UART3_RX=  000006     |     UART3_SR=  005240 
    UART3_TX=  000005     |     UART_BRR=  000002     |     UART_BRR=  000003 
    UART_CR1=  000004     |     UART_CR1=  000004     |     UART_CR1=  000002 
    UART_CR1=  000000     |     UART_CR1=  000001     |     UART_CR1=  000007 
    UART_CR1=  000006     |     UART_CR1=  000005     |     UART_CR1=  000003 
    UART_CR2=  000005     |     UART_CR2=  000004     |     UART_CR2=  000002 
    UART_CR2=  000005     |     UART_CR2=  000001     |     UART_CR2=  000000 
    UART_CR2=  000006     |     UART_CR2=  000003     |     UART_CR2=  000007 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 15.
Hexadecimal [24-Bits]

Symbol Table

    UART_CR3=  000006     |     UART_CR3=  000003     |     UART_CR3=  000001 
    UART_CR3=  000002     |     UART_CR3=  000000     |     UART_CR3=  000006 
    UART_CR3=  000004     |     UART_CR3=  000005     |     UART_CR4=  000007 
    UART_CR4=  000000     |     UART_CR4=  000001     |     UART_CR4=  000002 
    UART_CR4=  000003     |     UART_CR4=  000004     |     UART_CR4=  000006 
    UART_CR4=  000005     |     UART_CR5=  000008     |     UART_CR5=  000003 
    UART_CR5=  000001     |     UART_CR5=  000002     |     UART_CR5=  000004 
    UART_CR5=  000005     |     UART_CR6=  000009     |     UART_CR6=  000004 
    UART_CR6=  000007     |     UART_CR6=  000001     |     UART_CR6=  000002 
    UART_CR6=  000000     |     UART_CR6=  000005     |     UART_DR =  000001 
    UART_GTR=  000009     |     UART_PSC=  00000A     |     UART_SR =  000000 
    UART_SR_=  000001     |     UART_SR_=  000004     |     UART_SR_=  000002 
    UART_SR_=  000003     |     UART_SR_=  000000     |     UART_SR_=  000005 
    UART_SR_=  000006     |     UART_SR_=  000007     |     UBC     =  004801 
  5 USER_ABO   000088 R   |     USR_BTN_=  000004     |     USR_BTN_=  000010 
    USR_BTN_=  005015     |     VT      =  00000B     |     WDGOPT  =  004805 
    WDGOPT_I=  000002     |     WDGOPT_L=  000003     |     WDGOPT_W=  000000 
    WDGOPT_W=  000001     |     WIDTH   =  000001     |     WWDG_CR =  0050D1 
    WWDG_WR =  0050D2     |   1 acc16      0000A1 R   |   1 acc24      0000A0 R
  1 acc8       0000A2 R   |   5 clock_in   0001FE R   |     conio_in   ****** GX
  5 conio_te   000231 R   |   5 divu24_8   0001B3 GR  |     getchar    ****** GX
  5 init0      00020D R   |   5 itoa       000155 GR  |   5 itoa_loo   00016F R
  5 neg_acc2   0001DB GR  |   1 pad        000050 R   |   5 print_in   0000F9 GR
  5 print_re   000005 R   |     putchar    ****** GX  |     puts       ****** GX
  5 strlen     0001A1 GR  |   1 tib        000000 R   |   5 trap_put   000142 R
  5 trap_put   00014B R   |     uart_put   ****** GX  |     uart_put   ****** GX

ASxxxx Assembler V02.00 + NoICE + SDCC mods  (STMicroelectronics STM8), page 16.
Hexadecimal [24-Bits]

Area Table

   0 _CODE      size      0   flags    0
   1 DATA       size     A3   flags    0
   2 SSEG       size      0   flags    8
   3 SSEG0      size    100   flags    8
   4 HOME       size     80   flags    0
   5 CODE       size    23E   flags    0

